name: CI/CD

on:
  release:
    types: [created]
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]  

jobs:
  build_and_test:
    runs-on: ubuntu-latest

           
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: 11
        distribution: 'temurin'
        server-id: dev # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Cache the Maven packages to speed up build
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2      

    - name: Build and test project with Maven
      run: mvn -B package -Pdev --file pom.xml

    
  publish-job:
      runs-on: ubuntu-latest
      needs: [build_and_test]
      steps:
        - uses: actions/checkout@v1
        - uses: actions/setup-java@v1
          with:
            java-version: 14
        - run: mvn -B package -Pdev --file pom.xml -DskipTests
        - run: mkdir staging && cp target/*.jar staging
        - uses: actions/upload-artifact@v3
          with:
            name: Package
            path: staging
  
  build-docker-image:
    name: Publish to Docker Hub
    runs-on: ubuntu-latest
    needs: [build_and_test]

    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
      - name: Build Container image
        run: docker build -t ${{ secrets.DOCKER_REPO }}:latest .
      - name: Publish Docker image
        run: docker push ${{ secrets.DOCKER_REPO }}
